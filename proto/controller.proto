syntax = "proto3";

import "google/protobuf/any.proto";

package Drunc;

service Controller {
  rpc add_to_broadcast_list      (Request) returns (Response) {}
  rpc remove_from_broadcast_list (Request) returns (Response) {}
  rpc get_broadcast_list         (Request) returns (Response) {}

  rpc get_command_list           (Request) returns (Response) {}
  rpc execute_command            (Request) returns (Response) {}

  rpc take_control               (Request) returns (Response) {}
  rpc surrender_control          (Request) returns (Response) {}
  rpc who_is_in_charge           (Request) returns (Response) {}
}

service Broadcast {
  rpc handle_broadcast (BroadcastMessage) returns (BroadcastResponse) {}
}

message BroadcastResponse {
  BroadcastResponseCode code = 1;
}

enum BroadcastResponseCode {
  ACKNOWLEDGED = 0;
  REJECT = 1;
}

message Token {
  string token = 1;
  string user_name = 2;
}

message Response {
  google.protobuf.Any data = 1;
}

message Request {
  Token token = 1;
  optional google.protobuf.Any data = 2;
}

message BroadcastRequest {
  string broadcast_receiver_address = 1;
}

enum Level {
  DEBUG = 0;
  INFO = 1;
  WARNING = 2;
  ERROR = 3;
  CRITICAL = 4;
}

message BroadcastMessage {
  string emitter = 1;
  Level level = 2;
  string payload = 3; // could be "any" here, and we use a schema
}


message PlainText {
  string text = 1;
}


message Node {
  string name = 1;
  string uuid = 2;
  repeated Node children = 3;
}


message Argument {
  enum ArgumentType{
    MANDATORY = 0;
    OPTIONAL = 1;
  }
  string name = 1;
  ArgumentType type = 2;
  string deflt = 3;
  string help = 4;
}

message CommandSpecification {
  string name = 1;
  repeated Argument arguments = 2;
  string help = 3;
  repeated Node locality = 4;
}

message ListOfCommandsResponse {
  repeated CommandSpecification command = 2;
}

message CommandExecutionRequest {
  Token token = 1;
  repeated Node node = 2;
  Command command = 3;
}

message CommandResponse {
  string response_text = 2;
  CommandSpecification command = 3;
  string command_data = 4;
}

message Command {
  CommandSpecification command = 1;
  string command_data = 2;
}

