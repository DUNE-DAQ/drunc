syntax = "proto3";

package DUNEProcessManager;

service ProcessManager {
  rpc boot (BootRequest) returns (ProcessUUID) {}
  rpc restart (ProcessQuery) returns (ProcessInstance) {}
  rpc is_alive (ProcessQuery) returns (ProcessInstance) {}
  rpc kill (ProcessQuery) returns (ProcessInstance) {}
  rpc killall (ProcessQuery) returns (ProcessInstanceList) {}
  rpc flush (ProcessQuery) returns (ProcessInstanceList) {}
  rpc logs (LogRequest) returns (stream LogLine) {} 
  rpc list_process (ProcessMetadata) returns (ProcessInstanceList) {}
}

message ProcessRestriction {
  repeated string allowed_hosts = 1;
  repeated string allowed_host_types = 2;
}
message LogRequest {
  ProcessQuery query = 1;
  int32 how_far = 2;
}
message LogLine {
  ProcessUUID uuid = 1;
  string line = 2;
}

message ProcessUUID {
  string uuid = 1;
}

message ProcessMetadata {
  ProcessUUID uuid = 1;
  string user = 2;
  string partition = 3;
  string name = 4;
}

message ProcessQuery {
  optional ProcessUUID uuid = 1;
  optional string user = 2;
  optional string partition = 3;
  optional string name = 4;
  bool force = 5;
}

message ProcessDescription {
  message StringList {
    repeated string values = 1;
  };
  message ExecAndArgs{
    string exec = 1;
    repeated string args = 2;
  };
  ProcessMetadata metadata = 1;
  map<string,string> env = 2;
  repeated ExecAndArgs executable_and_arguments = 3;
  // map<string,string> runtime_environment = 4;
}

message ProcessInstance {
  ProcessDescription process_description = 1;
  ProcessRestriction process_restriction = 2;
  enum StatusCode {
    RUNNING = 0;
    DEAD = 1;
  };
  StatusCode status_code = 3;
  int32 return_code = 4;
  ProcessUUID uuid = 5;
}

message ProcessInstanceList{
  repeated ProcessInstance values = 1;
}

message BootRequest {
  ProcessDescription process_description = 1;
  ProcessRestriction process_restriction = 2;
}
