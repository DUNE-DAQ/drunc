syntax = "proto3";

package DUNEProcessManager;

service ProcessManager {
  rpc boot         (BootRequest)     returns (ProcessUUID)            {}
  rpc resurrect    (ProcessUUID)     returns (ProcessInstance)        {}
  rpc restart      (ProcessUUID)     returns (ProcessInstance)        {}
  rpc is_alive     (ProcessUUID)     returns (ProcessInstance)        {}
  rpc kill         (ProcessUUID)     returns (ProcessInstance)        {}
  rpc poll         (ProcessUUID)     returns (stream ProcessInstance) {}
  rpc list_process (ProcessMetadata) returns (ProcessInstanceList)    {}
}

message ProcessRestriction {
  repeated string allowed_hosts = 1;
  repeated string allowed_host_types = 2;
}

message ProcessUUID {
  string uuid = 1;
}

message ProcessMetadata {
  ProcessUUID uuid = 1;
  string user = 2;
  string partition = 3;
  string name = 4;
}
message ProcessDescription {
  message StringList {
    repeated string values = 1;
  };
  ProcessMetadata metadata = 1;
  map<string,string> env = 2;
  map<string,StringList> executable_and_arguments = 3;
  map<string,string> runtime_environment = 4;
}

message ProcessInstance {
  ProcessDescription process_description = 1;
  ProcessRestriction process_restriction = 2;
  enum StatusCode {
    RUNNING = 0;
    DEAD = 1;
  };
  StatusCode status_code = 3;
  ProcessUUID uuid = 4;
}

message ProcessInstanceList{
  repeated ProcessInstance values = 1;
}

message BootRequest {
  ProcessDescription process_description = 1;
  ProcessRestriction process_restriction = 2;
}
